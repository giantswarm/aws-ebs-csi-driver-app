{{- if .Values.removeStorageClassJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "ebs.name" . }}-remove-sc-job
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    app.kubernetes.io/component: "{{ template "ebs.name" . }}"-remove-sc-job
    {{- include "labels.common" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "{{ template "ebs.name" . }}"-remove-sc-job
        {{- include "labels.common" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "ebs.name" . }}-remove-sc-job
      securityContext:
        runAsUser: {{ .Values.global.securityContext.userID }}
        runAsGroup: {{ .Values.global.securityContext.groupID }}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      containers:
      - name: kubectl
        image: "{{ .Values.global.image.registry }}/giantswarm/docker-kubectl:latest"
        imagePullPolicy: "IfNotPresent"
        command:
        - sh
        - -c
        - |
          set -o errexit ; set -o xtrace ; set -o nounset

          kubectl delete storageclass {{ .Values.removeStorageClassJob.storageClassName }} --ignore-not-found=true 2>&1
      restartPolicy: OnFailure
  backoffLimit: 10
{{- end }}
